{
	"name": "Python 3.7, verovis Development",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": {
			"VARIANT": "3.7",
			"INSTALL_NODE": "true",
			//"NODE_VERSION": "lts/*"
			// INFO: If you plan to use the SAP HANA SQLTools Extension, currently only Node.js 12 is supported!
			"NODE_VERSION": "12.19.0"
		}
	},
	// INFO: Activate, if you want to connect to a remote Docker Host (e.g. a SSH Virtual Machine) using the current DevContainer.
	//		 Further Information can be found here:
	//		 https://code.visualstudio.com/docs/remote/containers-advanced#_developing-inside-a-container-on-a-remote-docker-host
	//		 https://code.visualstudio.com/docs/containers/ssh
	//		 and for the Prerequisites (OpenSSH Activation on Windows etc.)
	//		 https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse
	//		 https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_keymanagement
	//		 Use the SSH Key Pair which you've created during the Setup of the SSH-enabled Virtual Machine
	//"workspaceFolder": "/workspace",
	// INFO: Activate, if you want to mount a local Folder on the Remote SSH Target (Virtual Machine) to the remotely created Docker DevContainer,
	//		 set the Source Path accordingly!
	//"workspaceMount": "source=/home/azureuser/workspaces/Local/Jonas_Test,target=/workspace,type=bind,consistency=cached",
	// INFO: Activate, if, instead of mounting an existing Folder, you want to use a Folder inside the DevContainer (e.g. to clone a Git Repository),
	//		 you don't need to know anything about the File System of the Remote SSH Target (Virtual Machine) if you use this Approach.
	//"workspaceMount": "source=remote-workspace,target=/workspace,type=volume",
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/usr/local/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
		"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
		"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
		"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
		"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
		"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
		"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
		"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
		"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint"
	},
	"extensions": [
		"ms-python.python",
		"ms-toolsai.vscode-ai",
		"ms-vscode.azure-account",
		"ms-azuretools.vscode-azureappservice",
		"ms-vscode.azurecli",
		"ms-azuretools.vscode-azurestorage",
		"streetsidesoftware.code-spell-checker",
		"eamodio.gitlens",
		"ms-vsliveshare.vsliveshare",
		"ms-python.vscode-pylance",
		"ms-toolsai.jupyter",
		"mechatroner.rainbow-csv",
		"ms-mssql.mssql",
		// INFO: Enable if you plan to use SQLite Databases (e.g. during Django Web Development)
		// "alexcvzz.vscode-sqlite",
		"gruntfuggly.todo-tree",
		"visualstudioexptteam.vscodeintellicode",
		"tomoki1207.pdf",
		"dotjoshjohnson.xml",
		"redhat.vscode-yaml",
		"alefragnani.bookmarks",
		"github.vscode-pull-request-github",
		"mtxr.sqltools",
		// INFO: Running new Docker Containers inside a DevContainer (Docker-in-Docker) is currently not implemented,
		//		 Docker is not installed in the DevContainer Image. This Extension is only activated to enable e.g. Syntax Highlighting etc.
		//		 while working with Dockerfiles, see Extension Features https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker
		"ms-azuretools.vscode-docker",
		"mutantdino.resourcemonitor",
		// INFO: Enable, if you plan to use the SAP HANA SQLTools Extension!
		"saposs.sap-hana-driver-for-sqltools",
		"christian-kohler.path-intellisense"
	],
	// INFO: The postCreateCommand is executed after the Workspace Folder has been mounted. You can therefore execute any .sh Script in the Workspace Folder. Combine multiple Commands by using && (the Commands are executed in the Workspace Folder)
	// INFO: If you plan on using databricks-connect, remember to run 'databricks-connect configure' after the Container has been set-up for the first time!
	"postCreateCommand": "pip3 install --user -r requirements.txt",
	// Use to make a List of Ports inside the Container available to the local System (e.g. Windows)
	// "forwardPorts": [],
	// Disable to connect as 'root' instead. More Info: https://code.visualstudio.com/docs/remote/containers-advanced#_adding-a-nonroot-user-to-your-dev-container
	// "remoteUser": "vscode"
}